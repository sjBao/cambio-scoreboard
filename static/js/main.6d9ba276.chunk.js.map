{"version":3,"sources":["Player.js","PlayerList.js","ScoreBoardMenu.js","App.js","index.js"],"names":["Player","handleSubmit","e","preventDefault","playerId","props","player","id","score","target","value","addRoundToPlayer","rounds","this","map","idx","key","className","length","name","total","img_url","src","alt","style","fontSize","renderRounds","onSubmit","type","placeholder","Component","styles","display","flexDirection","PlayerList","players","ScoreBoardMenu","state","input","handleInputChange","setState","newPlayer","Math","random","addPlayer","onChange","App","newPlayers","playerCopy","unshift","reduce","num","acc","parseInt","newPlayerObj","React","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6d9ba276.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './Player.css';\n\nclass Player extends Component {\n\n  renderRounds() {\n    const { rounds } = this.props.player;\n    return rounds.map((score, idx) => {\n      return (\n        <div key={idx} className=\"score-card\">\n          <p className=\"score\">{score}</p>\n          <p className=\"player-total\">Round {rounds.length - idx}</p>\n        </div>\n      )\n    })\n\n  }\n\n  handleSubmit = e => {\n    e.preventDefault();\n\n    const playerId = this.props.player.id;\n    const score = e.target.score.value;\n\n    this.props.addRoundToPlayer(playerId, score);\n  }\n\n  render() {\n    const { name, total, img_url } = this.props.player;\n    return (\n      <div className=\"player-card\">\n        <div className=\"profile\">\n          <img src={img_url} alt=\"\" />\n          <p className=\"player-name\">{name}</p>\n        </div>\n        \n        <div className=\"score-card total\">\n          <p style={{ fontSize: '50px' }} className=\"score\">{total}</p>\n          <p className=\"player-total\">Total</p>\n        </div>\n\n        <div className=\"rounds\">\n          {this.renderRounds()}\n        </div>\n\n        <form onSubmit={this.handleSubmit}>\n          <input name=\"score\" type=\"number\" placeholder=\"score\" />\n          <button type=\"submit\">Add Score</button>\n        </form>\n      </div>\n    )\n  }\n}\n\nexport default Player;","import React, { Component } from 'react';\nimport Player from './Player';\n\nconst styles = {\n  display: 'flex',\n  flexDirection: 'column',\n}\n\nclass PlayerList extends Component {\n\n  render() {\n    return (\n      <div style={styles} className=\"player-list\">\n      {\n        this.props.players.map(player => \n          <Player\n            key={player.id}\n            addRoundToPlayer={this.props.addRoundToPlayer} \n            player={player} \n          />\n        )\n      }\n      </div>\n    )\n  }\n}\n\nexport default PlayerList","import React, { Component } from 'react';\nimport './ScoreBoardMenu.css';\n\nclass ScoreBoardMenu extends Component {\n  state = {\n    input: ''\n  }\n\n  handleInputChange = e => {\n    this.setState( { input: e.target.value } )\n  }\n\n  handleSubmit = e => {\n    e.preventDefault()\n    const newPlayer = {\n      id: Math.random(),\n      name: this.state.input,\n      rounds: [],\n      total: 0,\n      img_url: 'https://shreckhiseshrubbery.com/wp-content/uploads/2018/01/placeholder-pic.png'\n    }\n    this.props.addPlayer(newPlayer);\n  }\n  render() {\n    return (\n      <div className=\"score-board-menu\">\n        <form onSubmit={this.handleSubmit} className=\"new-player-form\">\n          <input\n            onChange={this.handleInputChange}\n            value={this.state.input}\n            name=\"newPlayer\" \n            type=\"text\" \n            placeholder=\"player name\" />\n          <button className=\"btn\" type=\"submit\">Add Player</button>\n        </form>\n      </div>\n    )\n  }\n}\n\nexport default ScoreBoardMenu;","import React from 'react';\nimport PlayerList from './PlayerList'\nimport ScoreBoardMenu from './ScoreBoardMenu'\n\n\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      players: []\n    }\n  }\n\n  addRoundToPlayer = (id, score) => {\n    const newPlayers = this.state.players.map(player => {\n      if (player.id === id) {\n        const playerCopy = { ...player };\n        playerCopy.rounds.unshift(score || 0);\n        playerCopy.total = playerCopy.rounds.reduce((num, acc) => parseInt(num) + parseInt(acc));\n\n        return playerCopy;\n      } else {\n        return player\n      }\n    })\n    this.setState({ players: newPlayers })\n  }\n\n  addPlayer = newPlayerObj => {\n    this.setState({\n      players: [ ...this.state.players, newPlayerObj ]\n    })\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <PlayerList \n          players={this.state.players} \n          addRoundToPlayer={this.addRoundToPlayer}\n        />\n        <ScoreBoardMenu addPlayer={this.addPlayer} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\n"],"sourceRoot":""}